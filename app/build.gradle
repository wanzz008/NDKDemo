apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.wzz.ndkdemo"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild { // 1、指定生成.so文件的支持cpu
            cmake {
                cppFlags ""
                // 生成多个版本的so文件
                abiFilters 'armeabi','arm64-v8a', 'armeabi-v7a', 'x86'
            }

        }

        // 2、如果想要配置so库的目标CPU平台，可以在build.gradle中设置（测试了下，效果同上 _wzz）
//        ndk{
//            moduleName "demo" // 生成的so的名字
//            abiFilters "x86","armeabi","armeabi-v7a" // 输出指定三种abi体系结构下的so库
//        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"  // 2、cmake配置文件路径
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
